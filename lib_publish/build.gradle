apply plugin: 'com.android.library'
apply plugin: 'maven'

ext {
    PUBLISH_GROUP_ID = 'cn.edu.lib'
    PUBLISH_ARTIFACT_ID = 'publish'
    PUBLISH_VERSION = '1.0.2' // 发布版本号
//    PUBLISH_VERSION = '1.0.1-SNAPSHOT'  // 测试时添加-SNAPSHOT
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}


// 是否发到本地maven(测试用)
def publishLocal = false

// 正式包地址
def releaseRepositoryUrl = "仓库地址"
// SNAPSHOT仓库地址
def snapShotRepositoryUrl = publishLocal ? repositories.mavenLocal().getUrl() : "仓库地址"

uploadArchives {
    repositories.mavenDeployer {

        // 正式仓库地址
        repository(url: releaseRepositoryUrl) {
            // 用户校验
            authentication(userName: '用户名', password: '密码')
        }
        // 快照仓库地址（可选）
        snapshotRepository(url: snapShotRepositoryUrl) {
            // 用户校验
            authentication(userName: '用户名', password: '密码')
        }

        pom.project {
            groupId project.PUBLISH_GROUP_ID
            artifactId project.PUBLISH_ARTIFACT_ID
            version project.PUBLISH_VERSION
            packaging 'aar'
        }
        // 去除pom文件引用依赖
        pom.whenConfigured { pom ->
            pom.dependencies.clear()
        }
    }
}